@model FGapp.Models.AS_SearchResponse

@{
    ViewBag.Title = "Site Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
<link href="~/Content/myapp.css" rel="stylesheet" />
<script type="text/javascript">
    $( document ).ready(function() {

        //alert('preset checkbox on states');
        for(var i=0; i<10; i++){
            var itemName = "#checkboxes-"+i; 
            var s = $(itemName).val();
            if(document.getElementById('state').value.indexOf(s) > -1)
                $(itemName).prop("checked", true);
            
        }

        $("#btnSearch").click(function() {
            $('#form1').submit();
        });
        

        $(document).ready(function(){
            $('#btnrefine').click(function(){
                var checkedValues = $('input:checkbox:checked').map(function() {
                    return this.value;
                }).get().join(',');
                document.getElementById('state').value=checkedValues;
                alert('hi');
                $('#form1').submit();
            });

            //$('input[type="checkbox"]').click(function(){
            //    var checkedValues = $('input:checkbox:checked').map(function() {
            //        return this.value;
            //    }).get().join(',');

            //    document.getElementById('state').value=checkedValues;
            //    //$('#form1').submit();
            //    //if($(this).is(":checked")){
            //    //    alert("Checkbox is checked.");
            //    //}
            //    //else if($(this).is(":not(:checked)")){
            //    //    alert("Checkbox is unchecked.");
            //    //}
            //});
        });
    });

</script>



<h2>Advance Search</h2>
<div class="container">

    <form action="~/site" method="post" id="form1">
        <input type="search" name="q" id="q" value="@ViewBag.searchString" autocomplete="off" size="100" /> <button form="form1" id="btnSearch" type="submit">Search</button>
        <input type="hidden" name="state" id="state" value="@ViewBag.state" />
        <input type="hidden" name="owner" id="owner" value="@ViewBag.owner" />
    </form>
</div>
@if (Model != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div>
                    <span>States</span>

                    <div class="checkbox">
                        <label for='checkboxes-0'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-0" value="QUEENSLAND">QUEENSLAND
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-1'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-1" value="NEW SOUTH WALES">NEW SOUTH WALES
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-2'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-2" value="AUSTRALIAN CAPITAL TERRITORY">AUSTRALIAN CAPITAL TERRITORY
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-3'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-3" value="VICTORIA">VICTORIA
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-4'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-4" value="TASMANIA">TASMANIA
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-5'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-5" value="NORTHERN TERRITORY">NORTHERN TERRITORY
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-6'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-6" value="SOUTH AUSTRALIA">SOUTH AUSTRALIA
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                    <div class="checkbox">
                        <label for='checkboxes-7'>
                            <input type="checkbox" name="checkboxes" id="checkboxes-7" value="WESTERN AUSTRALIA">WESTERN AUSTRALIA
                            @*<input type="checkbox" name="checkboxes" checked id=@("checkboxes-" + i ) value="@(stateFacet.Value[i].Value)"> @stateFacet.Value[i].Value*@
                        </label>
                    </div>
                </div>
                @*@if(Model.Facets!=null){*@
                @foreach (var stateFacet in Model.Facets)
                {
                    if (stateFacet.Key == "OWNER")
                    {
                        <span>Operators</span>
                        <ul>
                            @foreach (var item in stateFacet.Value)
                            {
                                <li><a href="#" class="btn btn-xs btn-default" onclick="document.getElementById('q').value='@item.Value'; document.forms[0].submit(); return false;">@item.Value (@item.Count)</a> </li>
                            }
                        </ul>
                    }

                    //if (stateFacet.Key == "STATE")
                    //{
                    
                    for (int i = 0; i < 10; i++)
                    {

                    }
                    //}

                    if (stateFacet.Key == "SITESUBURB")
                    {
                        <span>Suburbs</span>
                        <div>
                            @foreach (var item in stateFacet.Value)
                            {
                                <a href="#" class="btn btn-xs btn-default" onclick="document.getElementById('q').value='@item.Value'; document.forms[0].submit(); return false;">@item.Value (@item.Count)</a>
                            }
                        </div>
                    }
                }
                <button id="btnrefine" type="submit">Refine</button>
            </div>

        </div>
    </div>
}
else
{ <b>Sorry no results found.</b>}



<div class="tabbable">
    <!-- Only required for left/right tabs -->
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tab1" data-toggle="tab">Map</a></li>
        <li><a href="#tab2" data-toggle="tab">List</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="tab1">

            <span id="totalResult"></span>
            <div id="map" style="width: 500px; height: 400px;"></div>

        </div>
        <div class="tab-pane" id="tab2">
            <!--Columns - Search, sort, and paginate from JSON data
            --http://js-tutorial.com/columns-search-sort-and-paginate-your-json-data-815-->
            <script src="scripts/jquery.columns.min.js"></script>
            <link rel="stylesheet" href="content/jquery.columns.clean.css">

            <div id="columns"></div>
            <script>
                $(document).ready(function() {
                    var json =locations.Results;
                    $('#columns').columns({
                        data:json,
                        searchableFields: ['Name', 'OWNER', 'SITESUBURB'],
                        schema:[
                            {"header":"","key":"id",  "template":' '},
                            {"header":"Site","key":"Name", "template":'<a href="./site/details/{{id}}">{{Name}}</a>'},
                            {"header":"Brand","key":"OWNER"},
                            {"header":"Suburb","key":"SITESUBURB"},
                            {"header":"E10","key":"BioE10Unleaded"},
                            {"header":"Unleaded 91","key":"Unleaded91"},
                            {"header":"Unleaded 95","key":"PremiumUnleaded95"},
                            {"header":"Unleaded 98","key":"PremiumUnleaded98"},
                            {"header":"Diesel","key":"Diesel"},
                            {"header":"LPG","key":"LPG"}
                        ]
                    });
                });
            </script>
        </div>
    </div>
</div>



<script>
    // Define your locations: HTML content for the info window, latitude, longitude
    var locations =@Html.Raw(ViewBag.locationJson);

    // Setup the different icons and shadows
    var iconURLPrefix = 'http://maps.google.com/mapfiles/ms/icons/';

    var icons = [
      iconURLPrefix + 'red-dot.png',
      iconURLPrefix + 'green-dot.png',
      iconURLPrefix + 'blue-dot.png',
      iconURLPrefix + 'orange-dot.png',
      iconURLPrefix + 'purple-dot.png',
      iconURLPrefix + 'pink-dot.png',
      iconURLPrefix + 'yellow-dot.png'
    ]
    var iconsLength = icons.length;

    var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 10,
        //center: new google.maps.LatLng(-37.92, 151.25),
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        mapTypeControl: false,
        streetViewControl: false,
        panControl: false,
        zoomControlOptions: {
            position: google.maps.ControlPosition.LEFT_BOTTOM
        }
    });

    var infowindow = new google.maps.InfoWindow({
        maxWidth: 160
    });

    var markers = new Array();

    var iconCounter = 0;

    $('#totalResult').text('Total: ' + locations.Results.length +' of '+ locations.Count);

    // Add the markers and infowindows to the map
    for (var i = 0; i < locations.Results.length; i++) {
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(locations.Results[i]['geometry']["coordinates"][1],locations.Results[i]['geometry']["coordinates"][0]),
            map: map,
            icon: icons[iconCounter]
        });

        markers.push(marker);

        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infowindow.setContent("<a href=./site/details/"+locations.Results[i]["id"]+">"+locations.Results[i]["Name"]+"</a><br/><div><a href=./price/create/ULP/"+locations.Results[i]["id"]+">Unleaded91:</a> "+locations.Results[i]["Unleaded91"]+"</div>"+
                                                           "<div><a href=./price/create/LPG/"+locations.Results[i]["id"]+">LPG:</a> "+locations.Results[i]["LPG"]+"</div>"+
                                                           "<div><a href=./price/create/PULP98/"+locations.Results[i]["id"]+">PremiumUnleaded98:</a> "+locations.Results[i]["PremiumUnleaded98"]+"</div>");//name
                infowindow.open(map, marker);
            }
        })(marker, i));

        iconCounter++;
        // We only have a limited number of possible icon colors, so we may have to restart the counter
        if(iconCounter >= iconsLength) {
            iconCounter = 0;
        }
    }

    function autoCenter() {
        //  Create a new viewpoint bound
        var bounds = new google.maps.LatLngBounds();
        //  Go through each...
        for (var i = 0; i < markers.length; i++) {
            bounds.extend(markers[i].position);
        }
        //  Fit these bounds to the map
        map.fitBounds(bounds);
    }
    autoCenter();
</script>

<br /><br />



